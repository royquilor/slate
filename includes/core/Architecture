<h2 id='searchkit-architecture'>Searchkit Architecture</h2>
<p>ElasticSearch&#39;s querying is very sophisticated and modelling relationship between <code>query</code>, <code>components</code>, <code>results</code> and <code>url</code> required a certain core architecture.</p>
<h3 id='searchkit-39-s-core-classes'>Searchkit&#39;s core classes</h3>
<ul>
<li><strong><a href="SearchkitManager">SearchkitManager</a></strong> as a top level class to manage searchkit</li>
<li><a href="Accessors.md"><strong>Accessor</strong></a> An accessor manages state, maps to a url key and produces a part of an ElasticSearch query</li>
<li><a href="SearchkitComponent.md"><strong>SearchkitComponent</strong></a> is the main react baseclass which ties the <code>Searcher</code> and  <code>Accessor</code> to the UI.</li>
<li><a href="ImmutableQuery.md"><strong>ImmutableQuery</strong></a> A query object which is passed top down, the query is rebuilt on every search and accessors take care of returning a query based on its state.
<strong>Note:</strong> The query object is immutable as it removes defensive code related to worrying about internal change. It also allows comparison with previous queries when deciding when to search.</li>
</ul>
<pre class="highlight plaintext"><code>graph LR
  SearchkitManager--&gt;|has many|Accessor
  SearchkitComponent--&gt;|has many|Accessor
</code></pre>