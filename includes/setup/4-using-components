<h2 id='using-components'>Using Components</h2>
<p>Once you have the project setup, elasticsearch correctly indexed with data, we can start by adding components to the page to interact with the elasticsearch instance. For this series of examples we are using typescript with webpack.</p>
<h3 id='adding-basic-components'>Adding basic components</h3>
<p>To use searchkit, we need to instantiate a <code>SearchkitManager</code> with a elastic like host url as shown in <a href="elasticsearch.md">connecting elasticsearch</a>.</p>

<p>We then add Searchbox and hits components to the page. This should render the standard searchbox and hits to the page.</p>
<pre class="highlight jsx tab-jsx"><code><span class="kr">import</span> <span class="nx">React</span> <span class="nx">from</span> <span class="s2">"react"</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">ReactDOM</span> <span class="nx">from</span> <span class="s2">"react-dom"</span><span class="p">;</span>

<span class="kr">import</span> <span class="p">{</span>
  <span class="nx">SearchkitManager</span><span class="p">,</span> <span class="nx">SearchkitProvider</span><span class="p">,</span> <span class="nx">SearchBox</span><span class="p">,</span> <span class="nx">Hits</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s2">"searchkit"</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">searchkit</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchkitManager</span><span class="p">(</span><span class="s2">"/"</span><span class="p">);</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">((</span>
    <span class="p">&lt;</span><span class="nc">SearchkitProvider</span> <span class="na">searchkit=</span><span class="si">{</span><span class="nx">searchkit</span><span class="si">}</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nc">SearchBox</span><span class="p">/&gt;</span>
            <span class="p">&lt;</span><span class="nc">Hits</span><span class="p">/&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nc">SearchkitProvider</span><span class="p">&gt;</span>
<span class="p">),</span>  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">'root'</span><span class="p">))</span>
</code></pre><h3 id='adding-a-filter-based-component'>Adding a filter based component</h3>
<p>Each filter will require a unique id. This is used for url serialisation.</p>
<pre class="highlight jsx tab-jsx"><code><span class="kr">import</span> <span class="nx">React</span> <span class="nx">from</span> <span class="s2">"react"</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">ReactDOM</span> <span class="nx">from</span> <span class="s2">"react-dom"</span><span class="p">;</span>

<span class="kr">import</span> <span class="p">{</span>
  <span class="nx">SearchkitManager</span><span class="p">,</span> <span class="nx">SearchkitProvider</span><span class="p">,</span> <span class="nx">SearchBox</span><span class="p">,</span> <span class="nx">Hits</span><span class="p">,</span> <span class="nx">RefinementListFilter</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s2">"searchkit"</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">searchkit</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchkitManager</span><span class="p">(</span><span class="s2">"/"</span><span class="p">);</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">((</span>
    <span class="p">&lt;</span><span class="nc">SearchkitProvider</span> <span class="na">searchkit=</span><span class="si">{</span><span class="nx">searchkit</span><span class="si">}</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">SearchBox</span><span class="p">/&gt;</span>
      <span class="p">&lt;</span><span class="nc">RefinementListFilter</span> <span class="na">id=</span><span class="s2">"actors"</span> <span class="na">field=</span><span class="s2">"actors.raw"</span><span class="p">/&gt;</span>
      <span class="p">&lt;</span><span class="nc">Hits</span><span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nc">SearchkitProvider</span><span class="p">&gt;</span>
<span class="p">),</span>  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">'root'</span><span class="p">))</span>
</code></pre><h3 id='wrapping-search-in-react-component'>Wrapping search in React component</h3>
<p>You may want to incapsulate the searchApp within a React component. You can be using the SearchkitComponent class.</p>
<pre class="highlight jsx tab-jsx"><code><span class="kr">import</span> <span class="nx">React</span> <span class="nx">from</span> <span class="s2">"react"</span><span class="p">;</span>
<span class="kr">import</span> <span class="nx">ReactDOM</span> <span class="nx">from</span> <span class="s2">"react-dom"</span><span class="p">;</span>

<span class="kr">import</span> <span class="p">{</span>
  <span class="nx">SearchkitManager</span><span class="p">,</span> <span class="nx">SearchkitProvider</span><span class="p">,</span> <span class="nx">SearchkitComponent</span>
<span class="p">}</span> <span class="nx">from</span> <span class="s2">"searchkit"</span><span class="p">;</span>

<span class="kr">const</span> <span class="nx">searchkit</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">SearchkitManager</span><span class="p">(</span><span class="s2">"/"</span><span class="p">);</span>

<span class="kr">class</span> <span class="nx">SearchApp</span> <span class="kr">extends</span> <span class="nx">SearchkitComponent</span> <span class="p">{</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">(</span>
      <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nc">SearchBox</span><span class="p">/&gt;</span>
        <span class="p">&lt;</span><span class="nc">Hits</span><span class="p">/&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="nx">ReactDOM</span><span class="p">.</span><span class="nx">render</span><span class="p">((</span>
    <span class="p">&lt;</span><span class="nc">SearchkitProvider</span> <span class="na">searchkit=</span><span class="si">{</span><span class="nx">searchkit</span><span class="si">}</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nc">SearchApp</span><span class="p">/&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nc">SearchkitProvider</span><span class="p">&gt;</span>
<span class="p">),</span>  <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s1">'root'</span><span class="p">))</span>
</code></pre>